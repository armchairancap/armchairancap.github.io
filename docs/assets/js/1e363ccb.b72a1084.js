"use strict";(self.webpackChunkaa=self.webpackChunkaa||[]).push([[1643],{8817:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>h});var n=a(86070),s=a(27468);const i={slug:"2025/03/30/supra-signature-validation",title:"Supra signature validation without the SDK",authors:["armchairancap"],tags:["supra"],description:"Validate stuff signed by private key of a Supra wallet",keywords:["supra","starkey","cli","ed25519","signature","validate"],image:"/img/blog/2025-03-30-supra-signature-validation-python.png"},r=void 0,o={permalink:"/blog/2025/03/30/supra-signature-validation",source:"@site/blog/2025-03-30-supra-signature-validation-python.md",title:"Supra signature validation without the SDK",description:"Validate stuff signed by private key of a Supra wallet",date:"2025-03-30T00:00:00.000Z",tags:[{label:"supra",permalink:"/blog/tags/supra"}],readingTime:5.345,hasTruncateMarker:!1,authors:[{name:"ArmchairAncap",url:"https://github.com/armchairancap",imageURL:"https://github.com/armchairancap.png",key:"armchairancap"}],frontMatter:{slug:"2025/03/30/supra-signature-validation",title:"Supra signature validation without the SDK",authors:["armchairancap"],tags:["supra"],description:"Validate stuff signed by private key of a Supra wallet",keywords:["supra","starkey","cli","ed25519","signature","validate"],image:"/img/blog/2025-03-30-supra-signature-validation-python.png"},unlisted:!1,nextItem:{title:"About some special SupraNS (SNS) names",permalink:"/blog/2025/03/29/special-supra-suprans-names"}},d={authorsImageUrls:[void 0]},h=[{value:"Intro",id:"intro",level:2},{value:"Supra CLI",id:"supra-cli",level:2},{value:"Cryptography",id:"cryptography",level:2},{value:"Sign and validate",id:"sign-and-validate",level:2},{value:"Take-aways and next steps",id:"take-aways-and-next-steps",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#intro",children:"Intro"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#supra-cli",children:"Supra CLI"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#cryptography",children:"Cryptography"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#sign-and-validate",children:"Sign and validate"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#take-aways-and-next-steps",children:"Take-aways and next steps"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"intro",children:"Intro"}),"\n",(0,n.jsx)(t.p,{children:"How to sign and validate a message using your wallet private key from the CLI?"}),"\n",(0,n.jsx)(t.p,{children:"I blogged about this topic in the context of xx Network and I need this for Supra Network as well."}),"\n",(0,n.jsx)(t.h2,{id:"supra-cli",children:"Supra CLI"}),"\n",(0,n.jsx)(t.p,{children:"I haven't spent much time playing with Supra CLI, but recently I got my hands on the Docker image v8.0.2 (which is currently the main way Supra distributes the CLI package)."}),"\n",(0,n.jsxs)(t.p,{children:["You can read about getting started in the CLI section of the ",(0,n.jsx)(t.a,{href:"https://docs.supra.com/",children:"Supra Documentation"}),". You download the Docker container and create a profile, which stores your settings similar to below (line breaks added for easier viewing)."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:'$ supra profile -l \nEnter your password: \n-------------------------- Profile List ---------------------------------\n\t(*) deftest\nCliProfile { account_address: "0xf63b51af98a1ff6b469bb5b8e9fa4b81733b2ef79234c4bffd949bf53f6579dc", \n            ed25519_public_key: 02d0b5b6226d8b9606aedac673de9591f34745f1e38d2f3805067dba2ed5b1a5, \n            rpc_url: "https://rpc-testnet.supra.com/", \n            faucet_url: "https://rpc-testnet.supra.com/", \n            chain_id: 6 }\n-------------------------------------------------------------------------\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The above is my default profile for testnet. Where's the private key? You need ",(0,n.jsx)(t.code,{children:"-l -r"})," to include the private key as well."]}),"\n",(0,n.jsx)(t.h2,{id:"cryptography",children:"Cryptography"}),"\n",(0,n.jsx)(t.p,{children:"This is not my area, but we have search engines (and more recently, AIs)."}),"\n",(0,n.jsxs)(t.p,{children:["To get started, I referenced ",(0,n.jsx)(t.code,{children:"[1]"}),":"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Raw signatures",src:a(13905).A+"",width:"795",height:"408"})}),"\n",(0,n.jsx)(t.p,{children:"What we can see here is raw keys, which - as we shall see later - is the same thing that Supra CLI shows us. This hopefully means we can use the same tools to get the same result."}),"\n",(0,n.jsxs)(t.p,{children:["I then proceeded with ",(0,n.jsx)(t.a,{href:"https://cryptography.io/en/latest/hazmat/primitives/asymmetric/ed25519/",children:"RTFM"})," to get it done."]}),"\n",(0,n.jsxs)(t.p,{children:["Reference: ",(0,n.jsx)(t.code,{children:"[1] https://asecuritysite.com/openssh/openssh2"})]}),"\n",(0,n.jsx)(t.h2,{id:"sign-and-validate",children:"Sign and validate"}),"\n",(0,n.jsx)(t.p,{children:'So, how to sign stuff? ("Stuff" means stuff - anything that can be fed via STDIN or referenced as a file).'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:'$ supra profile sign --profile deftest --stdin reputable.supra\nEnter your password: \nContentSignature { signature: "c36472c483adbc6d311234984debd9947fbf25d36539183fe4a100da335f7839fa3cb3c276a82a025b5a1464a459aeacec5383a7c6dffa387fce08a7b0e1c203" }\n'})}),"\n",(0,n.jsxs)(t.p,{children:["If I had an image such as img.png, I'd do ",(0,n.jsx)(t.code,{children:"--file ./img.png"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Note that if a profile has multiple addresses, I'd also provide the account address."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"$ supra profile sign -h\nSign the payload\n\nUsage: supra profile sign [OPTIONS]\n\nOptions:\n      --profile <PROFILE>                        Profile to use from the CLI config\n      --private-key-file <PRIVATE_KEY_FILE>      Signing Ed25519 private key file path\n      --private-key <PRIVATE_KEY>                Signing Ed25519 private key\n      --account-address <ACCOUNT_ADDRESS>        \n      --rpc-url <RPC_URL>                        \n      --faucet-url <FAUCET_URL>                  \n      --sender-account <SENDER_ACCOUNT>          Sender account address\n      --file <FILE>                              \n      --stdin <STDIN>                            \n      --expected-signature <EXPECTED_SIGNATURE>  \n  -h, --help                                     Print help (see more with '--help')\n\n"})}),"\n",(0,n.jsxs)(t.p,{children:["In any case, a signature is generated by signing stuff with the Ed25519 private key (in Supra CLI profile, it's named ",(0,n.jsx)(t.code,{children:"ed25519_secret_key"}),") that belongs to the profile and address you provided."]}),"\n",(0,n.jsxs)(t.p,{children:["Now the fun part: there's just ",(0,n.jsx)(t.code,{children:"supra profile sign"}),", but no ",(0,n.jsx)(t.code,{children:"supra profile validate"}),". Oops!"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"$ supra profile -h\nManage Supra CLI profile\n\nUsage: supra profile <COMMAND>\n\nCommands:\n  list, -l, --list             List public keys of all profiles.\n  activate                     Activate the profile.\n  new                          Creates a new profile.\n  generate-validator-identity  Generate validator identity file.\n  remove                       Remove existing cli profile\n  modify                       Modify the profile attributes\n  sign                         Sign the payload\n  help                         Print this message or the help of the given subcommand(s)\n"})}),"\n",(0,n.jsx)(t.p,{children:'I suppose this is when they tell you "just use the SDK". Yeah, no, thank you.'}),"\n",(0,n.jsx)(t.p,{children:"I don't mean that it wouldn't work, but rather that then I'd have to use the SDK which is precisely what I don't want."}),"\n",(0,n.jsxs)(t.p,{children:["I want something lightweight that works in Python. And there's no officially supported Supra SDK for Python (there's this ",(0,n.jsx)(t.a,{href:"https://github.com/Entropy-Foundation/aptos-python-sdk",children:"fork"}),", but it's not supported and who knows if it even works. I haven't checked whether it contains signature validation functions)."]}),"\n",(0,n.jsx)(t.p,{children:'So, it\'s back to that RTFM link above ("generic" Python Cryptography module). Using that approach, you can create a script that uses your private keyh to sign stuff in Python.'}),"\n",(0,n.jsx)(t.p,{children:"You can make it so that you provide a private Ed25519 key and string to sign, sign and then validate."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:'PRIVKEY="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\n$ ./sign_message.py ${PRIVKEY} reputable.supra\n\nSignature:\nf506d305fb4026d9822b09a547c30443f299a14a583e4b95b05466fe60d7d59b6dc7f2b7612fcb0afd19ec285ec246e59556c5590655938ad105b402fd3ab400\n\nSignature is valid.\n'})}),"\n",(0,n.jsx)(t.p,{children:"That's great, right? Not really."}),"\n",(0,n.jsxs)(t.p,{children:["I got a ",(0,n.jsx)(t.em,{children:"different"})," signature using the same inputs that I used with Supra CLI!"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-raw",children:"# f506d305fb4026d9822b09a547c30443f299a14a583e4b95b05466fe60d7d59b6dc7f2b7612fcb0afd19ec285ec246e59556c5590655938ad105b402fd3ab400 # Python \n# c36472c483adbc6d311234984debd9947fbf25d36539183fe4a100da335f7839fa3cb3c276a82a025b5a1464a459aeacec5383a7c6dffa387fce08a7b0e1c203 # Supra CLI\n"})}),"\n",(0,n.jsx)(t.p,{children:"And, even worse, if I validate the Supra CLI signature using my Python script, it fails."}),"\n",(0,n.jsx)(t.p,{children:"That means we didn't sign it exactly the same way."}),"\n",(0,n.jsx)(t.p,{children:'If I sign and validate signature ("end to end") in Python, it works. But I can\'t validate Supra CLI signatures using the right public key.'}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["I spotted ",(0,n.jsx)(t.a,{href:"https://github.com/Entropy-Foundation/aptos-python-sdk/blob/ed7d1136caaf83a06e0566a2eec08cf1a6ce7f9a/aptos_sdk/secp256k1_ecdsa.py#L55",children:"this"})," part which hints at deterministic signatures, but I didn't get anywhere with that lead."]})}),"\n",(0,n.jsx)(t.h2,{id:"take-aways-and-next-steps",children:"Take-aways and next steps"}),"\n",(0,n.jsx)(t.p,{children:"Supra CLI lets me sign, but not validate."}),"\n",(0,n.jsx)(t.p,{children:"Python Cryptography module lets me do both, but I can only validate what I signed with Python, and not what Supra CLI signed."}),"\n",(0,n.jsxs)(t.admonition,{type:"info",children:[(0,n.jsx)(t.p,{children:"The Python Cryptography approach isn't completely useless: if I sign and validate using it, it does work."}),(0,n.jsx)(t.p,{children:"The reason to not like it is getting a private key out of your wallet (or CLI profile) is risky (and annoying). It can be fine in some isolated batch-processing environment where all keys are stored in a database, but it's not a good idea for regular use and it's completely impractical for StarKey use."}),(0,n.jsx)(t.p,{children:"My use case happens to be batch processing, but not of the kind that can work: my input is a Supra CLI-signed signature which means I can't validate it with my Python approach (unless I find a way to fix it)."}),(0,n.jsxs)(t.p,{children:["Another shortcoming - which may or may not bother you - is that the Python approach doesn't give you the wallet address. If you scroll up to see Supra CLI profile list output, you'll see that ",(0,n.jsx)(t.code,{children:"account_address"})," is different from ",(0,n.jsx)(t.code,{children:"ed25519_public_key"}),". Even if you perform end-to-end signing and validation in Python, you won't know the wallet address without additional steps or more information provided by the user. If you need to transfer coins or do something else, you'll need additional steps to compute account address from ",(0,n.jsx)(t.code,{children:"ed25519_public_key"})," (doesn't look hard, e.g. see ",(0,n.jsx)(t.a,{href:"https://stackoverflow.com/questions/76946957/aptos-get-address-from-privatekey",children:"this"}),", but has to be done if you need it and it'd better generate the address that's in wallet, in terms of derivation path)."]})]}),"\n",(0,n.jsxs)(t.p,{children:["I'm ",(0,n.jsx)(t.a,{href:"https://stackoverflow.com/questions/77674402/how-to-verify-a-signature-by-aptos-typescript-sdk-on-backend",children:"happy to see"})," that people struggle with this even if they use Aptos (or Supra) SDK, so I'm probably not the dumbest enthusiast out there."]}),"\n",(0,n.jsx)(t.p,{children:"If I figure out how to do this and remember to update this post later, I'll do it."}),"\n",(0,n.jsx)(t.p,{children:"My next attempt may be with Aptos Python SDK and, if that doesn't work, maybe I'll fall back to NodeJS CLI (and SDK)."})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},13905:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/2025-03-30-supra-signature-validation-python-5a77e965d9e5136433170031f3c0d850.png"},27468:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>o});var n=a(30758);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);