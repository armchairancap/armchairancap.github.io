"use strict";(self.webpackChunkaa=self.webpackChunkaa||[]).push([[8969],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),y=r,k=u["".concat(l,".").concat(y)]||u[y]||d[y]||o;return a?n.createElement(k,s(s({ref:t},c),{},{components:a})):n.createElement(k,s({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},7981:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(7462),r=(a(7294),a(4137));const o={slug:"2023/04/30/install-xx-network-speakeasy",title:"Install own xx Network Speakeasy Web server",authors:["armchairancap"],tags:["xx network","speakeasy"],description:"Install your own instance of xx Network Speakeasy Web server or Docker container",keywords:["xx network","speakeasy","docker","container","server","instance"]},s=void 0,i={permalink:"/blog/2023/04/30/install-xx-network-speakeasy",source:"@site/blog/2023-04-30-install-speakeasy-app.md",title:"Install own xx Network Speakeasy Web server",description:"Install your own instance of xx Network Speakeasy Web server or Docker container",date:"2023-04-30T00:00:00.000Z",formattedDate:"April 30, 2023",tags:[{label:"xx network",permalink:"/blog/tags/xx-network"},{label:"speakeasy",permalink:"/blog/tags/speakeasy"}],readingTime:5.205,hasTruncateMarker:!1,authors:[{name:"ArmchairAncap",url:"https://github.com/armchairancap",imageURL:"https://github.com/armchairancap.png",key:"armchairancap"}],frontMatter:{slug:"2023/04/30/install-xx-network-speakeasy",title:"Install own xx Network Speakeasy Web server",authors:["armchairancap"],tags:["xx network","speakeasy"],description:"Install your own instance of xx Network Speakeasy Web server or Docker container",keywords:["xx network","speakeasy","docker","container","server","instance"]},prevItem:{title:"Sign and verify messages using xx Network wallet",permalink:"/blog/2023/05/08/xx-network-wallet-sign-verify"}},l={authorsImageUrls:[void 0]},p=[{value:"Containerized or non-containerized Speakeasy",id:"containerized-or-non-containerized-speakeasy",level:2},{value:"Home or cloud",id:"home-or-cloud",level:2},{value:"Software and hardware requirements",id:"software-and-hardware-requirements",level:2},{value:"Install Node.js",id:"install-nodejs",level:2},{value:"Deploy and run Speakeasy",id:"deploy-and-run-speakeasy",level:2},{value:"Pick Speakeasy Web application port",id:"pick-speakeasy-web-application-port",level:3},{value:"Reverse HTTPS proxy",id:"reverse-https-proxy",level:2},{value:"Custom port, host or path",id:"custom-port-host-or-path",level:3},{value:"TLS certificate",id:"tls-certificate",level:3},{value:"Update Speakeasy",id:"update-speakeasy",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"containerized-or-non-containerized-speakeasy"},"Containerized or non-containerized Speakeasy"),(0,r.kt)("p",null,"It's probably easier to run Speakeasy in a container. If you have Docker or Postman, you may try ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/armchairancap/xx-speakeasy-container"},"these")," instructions."),(0,r.kt)("p",null,"In the case you want to self-host a non-containerized Speakeasy, read on!"),(0,r.kt)("h2",{id:"home-or-cloud"},"Home or cloud"),(0,r.kt)("p",null,"You may install Speakeasy at home or in the cloud."),(0,r.kt)("p",null,"Speakeasy Web server doesn't hold any data but its OS and Node.js logs may store client IPs, that's all. "),(0,r.kt)("p",null,"With that in mind, high-level considerations would be:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We don't want our Speakeasy Web app or underlying OS to get compromised"),(0,r.kt)("li",{parentName:"ul"},'If your Speakeasy server is not open to public, or is accessed "by invite" (maybe with basic authentication or VPN, for your family and friends), you may run it at home'),(0,r.kt)("li",{parentName:"ul"},"If your Speakeasy server is located in the cloud, that's acceptable as long as you can protect it from getting compromised so that application code doesn't get replaced, OS compromised, or visitors' IPs leaked.")),(0,r.kt)("p",null,"Regarding this last point, if you feel comfortable hosting your Speakeasy server in a small (1G RAM) VM, it is better to open it to public to have the Web server accessed by a variety of addresses. As long as you know how to protect the VM."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Each participant in a conversation can use a different Speakeasy Web server, so many combinations are possible.")),(0,r.kt)("h2",{id:"software-and-hardware-requirements"},"Software and hardware requirements"),(0,r.kt)("p",null,"Use a Linux OS or VM, x86_64 or ARM64 architecture. Required specifications are minimal:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1 vCPU"),(0,r.kt)("li",{parentName:"ul"},"1 GB RAM")),(0,r.kt)("p",null,"All Speakeasy app/web server does is serve the app to the client(s) and that's one-time download from each client. "),(0,r.kt)("p",null,"One vCPU is enough and won't be significantly utilized except when Node.js builds the application - that takes a long time (15 minutes), but has to be done only when Speakeasy app is updated or rebuilt."),(0,r.kt)("h2",{id:"install-nodejs"},"Install Node.js"),(0,r.kt)("p",null,"This post was prototyped on DietPi, which currently uses Node.js 20. "),(0,r.kt)("p",null,"On DietPi, you may install Node.js as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo dietpi-software install 9\n")),(0,r.kt)("p",null,"Or, run ",(0,r.kt)("inlineCode",{parentName:"p"},"dietpi-software"),", select ",(0,r.kt)("inlineCode",{parentName:"p"},"Search software"),", search for ",(0,r.kt)("inlineCode",{parentName:"p"},"Node.js"),", and proceed with installation."),(0,r.kt)("p",null,"For other Linux OS, follow their installation instructions for ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js")," version 16.14 or above."),(0,r.kt)("h2",{id:"deploy-and-run-speakeasy"},"Deploy and run Speakeasy"),(0,r.kt)("p",null,"We need to pick a directory for the application, clone the source to that directory, change some parameters and install."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo mkdir -p /usr/src/app/speakeasy/.next\n")),(0,r.kt)("p",null,"If your username is joe, you could run it as such. Otherwise, create a non-sudoer account and use that."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo chown -R joe:joe /usr/src/app/speakeasy\n")),(0,r.kt)("p",null,"That should allow you to run the rest without using ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo"),"."),(0,r.kt)("p",null,"Next, clone the Speakeasy source code, change configuration parameters and run it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://git.xx.network/elixxir/speakeasy-web /usr/src/app/speakeasy\ncd /usr/src/app/speakeasy\n")),(0,r.kt)("h3",{id:"pick-speakeasy-web-application-port"},"Pick Speakeasy Web application port"),(0,r.kt)("p",null,"Pick a port to run Speakeasy on, such as 7080, and use it consistently later:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sed -i 's/next start/next start -p 7080/g' package.json\nsed -i 's/const nextConfig = {/const nextConfig ={\\\\n  productionBrowserSourceMaps: true,/g' next.config.js\nrm -rf node_modules && npm install -g npm@9.6.5 && npm install && npx next telemetry disable && npx next build\nnpm start\n")),(0,r.kt)("p",null,"Check if Speakeasy app is up and running by going to ",(0,r.kt)("inlineCode",{parentName:"p"},"http://${SERVER_IP}:7080"),". You may need to open OS firewall for that. Example for Ubuntu:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo ufw allow 7080/tcp\n")),(0,r.kt)("p",null,"Since that port doesn't need to be exposed when Speakeasy is running behind HTTPS proxy, it is advisable to delete the rule after testing the application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo ufw status numbered\n\n")),(0,r.kt)("p",null,"You won't be able to do much with Speakeasy running at ",(0,r.kt)("inlineCode",{parentName:"p"},"http://host:7080")," because there's no reverse HTTPS proxy in front of Speakeasy. If you attempt to create an identity you will get stuck at the ",(0,r.kt)("inlineCode",{parentName:"p"},"Find your Codename")," step. "),(0,r.kt)("p",null,"Assuming the rules for 7080/tcp are number 7 and 8, and your HTTPS reverse proxy will run on the same host, you can delete the rules: ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo ufw delete 7 ; sudo ufw delete 8"),"."),(0,r.kt)("p",null,"The right firewall port to open on the ",(0,r.kt)("em",{parentName:"p"},"host")," would be whatever port is used by your HTTPS reverse proxy (e.g. 14443)."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"To be fully functional, Speakeasy Web app must be accessed through an HTTPS proxy.")),(0,r.kt)("h2",{id:"reverse-https-proxy"},"Reverse HTTPS proxy"),(0,r.kt)("p",null,"Deploy reverse HTTPS proxy in front of Speakeasy so that external port is forwarded to Speakeasy's application port (example: ",(0,r.kt)("inlineCode",{parentName:"p"},"https://fqdn:14443")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:7080"),"). To use 14443/tcp, open that firewall port on external network."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo ufw allow 14443/tcp\n")),(0,r.kt)("p",null,"Now configure HTTPS reverse proxy to forward incoming 14443/tcp to 7080/tcp, and if you wish make HTTPS reverse proxy and Speakeasy Web app start (",(0,r.kt)("inlineCode",{parentName:"p"},"npm start"),") automatically."),(0,r.kt)("p",null,"For that you may use Caddy, Traefik, NGINX or other. "),(0,r.kt)("p",null,"There are many ways to deploy each reverse proxy and at the same time there are no Speakeasy-specific steps here, so the details are an exercise for the reader. Find and try the official or community examples for your proxy and Node.js."),(0,r.kt)("h3",{id:"custom-port-host-or-path"},"Custom port, host or path"),(0,r.kt)("p",null,"In the case Speakeasy is the only application proxied by HTTPS reverse proxy, it is most convenient to expose it at ",(0,r.kt)("inlineCode",{parentName:"p"},"https://host:443"),"."),(0,r.kt)("p",null,"In the case the same HTTPS reverse proxy is used for several applications, Speakeasy can be hosted in a directory (or, more complicated, at a dedicated virtual host name or FQDN)."),(0,r.kt)("h3",{id:"tls-certificate"},"TLS certificate"),(0,r.kt)("p",null,"In any and all cases, your reverse HTTPS proxy would need a TLS certificate."),(0,r.kt)("p",null,"If your reverse proxy integrates with Let's Encrypt, you could expose Speakeasy to the Internet rather than use internal or even self-signed TLS certificate."),(0,r.kt)("p",null,"Speakeasy Web server doesn't host any account or chat data. If you expose Speakeasy to the Internet, the main concern is to prevent NodeJS from application server take-over and tampering, so it can be advantageous to run it using a limited local account, and optionally add some form of authentication to your HTTPS proxy."),(0,r.kt)("p",null,"Once a TLS-enabled proxy is functional, you can access Speakeasy, create a new codename or import existing, and start using Speakeasy."),(0,r.kt)("h2",{id:"update-speakeasy"},"Update Speakeasy"),(0,r.kt)("p",null,"As mentioned before, Speakeasy can be simply wiped and re-installed because only serves the application code and does not store any client data."),(0,r.kt)("p",null,"The official instance at speakeasy.tech usually runs the latest version, so visit that site from time to time, or watch the Speakeasy repository for new releases, or follow xx Network on Twitter."))}d.isMDXComponent=!0}}]);