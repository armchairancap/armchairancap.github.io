"use strict";(self.webpackChunkaa=self.webpackChunkaa||[]).push([[5137],{9145:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>h});var n=a(86070),t=a(27468);const r={slug:"2025/02/19/supra-suprans-sns-hex-names",title:"SupraNS (SNS) names with hexadecimal symbols",authors:["armchairancap"],tags:["supra"],description:"SupraNS names available for purchase",keywords:["supra","starkey","suprans","name","name system","hex","hex name"]},o="Hex Names",d={permalink:"/blog/2025/02/19/supra-suprans-sns-hex-names",source:"@site/blog/2025-03-19-supra-suprans-sns-hex-names.md",title:"SupraNS (SNS) names with hexadecimal symbols",description:"SupraNS names available for purchase",date:"2025-03-19T00:00:00.000Z",tags:[{label:"supra",permalink:"/blog/tags/supra"}],readingTime:5.605,hasTruncateMarker:!1,authors:[{name:"ArmchairAncap",url:"https://github.com/armchairancap",imageURL:"https://github.com/armchairancap.png",key:"armchairancap"}],frontMatter:{slug:"2025/02/19/supra-suprans-sns-hex-names",title:"SupraNS (SNS) names with hexadecimal symbols",authors:["armchairancap"],tags:["supra"],description:"SupraNS names available for purchase",keywords:["supra","starkey","suprans","name","name system","hex","hex name"]},unlisted:!1,prevItem:{title:"Supra holders, move active stashes to a DEX",permalink:"/blog/2025/03/26/move-supra-to-dex"},nextItem:{title:"Buy my SupraNS names",permalink:"/blog/2025/02/23/supra-suprans-names-for-sale"}},i={authorsImageUrls:[void 0]},h=[{value:"Downsides of hex SNS names",id:"downsides-of-hex-sns-names",level:2},{value:"Benefits of hex SNS names",id:"benefits-of-hex-sns-names",level:2},{value:"Other notes",id:"other-notes",level:2},{value:"Unexpected behavior of Supra CLI",id:"unexpected-behavior-of-supra-cli",level:4},{value:"Where to buy or register hex names",id:"where-to-buy-or-register-hex-names",level:2},{value:"Update (March 25, 2025)",id:"update-march-25-2025",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"Today I registered some hex names."}),"\n",(0,n.jsxs)(s.p,{children:['They\'re not just "fancy" but have use cases, one of which I just added to ',(0,n.jsx)(s.a,{href:"https://suprans.name",children:"SupraNS"}),". Such names are not novel, but they're rarely used and, in my opinion, interesting. So I'll write a few words about that."]}),"\n",(0,n.jsxs)(s.p,{children:["Say you get a SNs name that consists of hexadecimal symbols (",(0,n.jsx)(s.code,{children:"[0-9][A-F]"}),"). Example: ",(0,n.jsx)(s.code,{children:"b00b5"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Is that interesting and/or useful? Let's take a closer look."}),"\n",(0,n.jsx)(s.h2,{id:"downsides-of-hex-sns-names",children:"Downsides of hex SNS names"}),"\n",(0,n.jsxs)(s.p,{children:['A "hex name" can be dangerous if you get autocorrected when entering such SNS names. For example, a payee may end up entering ',(0,n.jsx)(s.code,{children:"boobs.supra"})," in StarKey wallet and send funds to the wrong address."]}),"\n",(0,n.jsxs)(s.p,{children:['But that risk depends on the name and whether the "wrong" SNS exists (in many cases it would). Most names shouldn\'t get autocorrected (especially not ',(0,n.jsx)(s.code,{children:"b00b5"}),"). In some cases hex names will be less autocorrect-prone because they may not match common misspellings (thanks to the fact that they usually contain digits)."]}),"\n",(0,n.jsxs)(s.p,{children:["Another danger is visual confusion, where someone misreads ",(0,n.jsx)(s.code,{children:"1abe1.supra"})," and sends funds to ",(0,n.jsx)(s.code,{children:"label.supra"}),". One workaround is to register the both SNS names. Another is to not make such mistakes (e.g. use a good font, or advise your counterparty to use copy-and-paste rather than view-and-retype when entering your SNS hex address)."]}),"\n",(0,n.jsx)(s.h2,{id:"benefits-of-hex-sns-names",children:"Benefits of hex SNS names"}),"\n",(0,n.jsxs)(s.p,{children:["First, they're fancy and can be ",(0,n.jsx)(s.code,{children:"c001"})," (somebody snapped this one before me)."]}),"\n",(0,n.jsxs)(s.p,{children:["Second, they cay be practical. If you create a wallet address that matches your SupraNS name for easy address recognition (e.g. in SupraScan.io or API output), it's easier to use or develop. For example, I may have SNS ",(0,n.jsx)(s.code,{children:"b00b5.supra"})," mapped to wallet address ",(0,n.jsx)(s.code,{children:"b00b57fef64e98e838eef231215dd0e7fa634d2fd70e75ae50df3a2959eba2f4"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Or, the proverbial Alice may be ",(0,n.jsx)(s.code,{children:"boob5"})," + ",(0,n.jsx)(s.code,{children:"a"}),", which allows me up to 26 test addresses for easy testing:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-raw",children:"alice.b00b5.supra # b00b5a7fef64e98e838eef231215dd0e7fa634d2fd70e75ae50df3a2959eba2f\njane.b00b5.supra  # b00b5j16c6bde199856efd1204ae840d21e3a26d0c501fb1521a0d9f7302934d\n"})}),"\n",(0,n.jsx)(s.p,{children:"Another example, in Russian."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Advanced example of the use of hex addresses (Russian)",src:a(16329).A+"",width:"802",height:"391"})}),"\n",(0,n.jsxs)(s.p,{children:["Or ",(0,n.jsx)(s.code,{children:"00[0-9].0b1a57.supra"})," could be created in SNS and mapped to 10 vanity addresses (",(0,n.jsx)(s.code,{children:"0x0b1a57[0-9]..."}),"). Or we could continue with hex symbols and point ",(0,n.jsx)(s.code,{children:"facade.0b1a57.supra"})," to ",(0,n.jsx)(s.code,{children:"0xfacade...."}),", ",(0,n.jsx)(s.code,{children:"decade.0b1a57.supra"})," to ",(0,n.jsx)(s.code,{children:"0xdecade..."})," and so on. You get the idea - it can be done nicely!"]}),"\n",(0,n.jsxs)(s.p,{children:["An example in Japanese with vanity sub-domain addresses and Japanese sub-domain names (",(0,n.jsx)(s.em,{children:"eiga"}),", ",(0,n.jsx)(s.em,{children:"ato"}),"):"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Advanced example of the use of hex addresses (Japanese)",src:a(26441).A+"",width:"802",height:"391"})}),"\n",(0,n.jsxs)(s.admonition,{type:"note",children:[(0,n.jsx)(s.p,{children:"Note that StarKey won't create vanity addresses for you. Even if it could, it'd be slow for anything but 3 letters."}),(0,n.jsxs)(s.p,{children:["You'd have to generate such addresses outside and import their private key to StarKey. You probably don't need that for SupraScan.io, CLI or API use cases but it can be useful - for example, it's easy to find and share your wallet address ",(0,n.jsx)(s.code,{children:"0x0b1a571..."})," without SNS. There may 2-3 partially matching wallets but even in that case you could easily identify yours by looking at the transaction history."]})]}),"\n",(0,n.jsx)(s.h2,{id:"other-notes",children:"Other notes"}),"\n",(0,n.jsx)(s.p,{children:"SNS names can be as short as 3 single-byte characters."}),"\n",(0,n.jsxs)(s.p,{children:['Long hex names are impractical: hard to read, hard to tyype. If you combine two "hex words" (say, ',(0,n.jsx)(s.code,{children:"b19b00b5"}),"), that's probably the upper limit. Three words are usually hard to read. And ",(0,n.jsx)(s.code,{children:"-"})," isn't a hexadecimal symbol, so ",(0,n.jsx)(s.code,{children:"b19-b00b5"})," is possible in SNS but can't be mapped to a wallet address."]}),"\n",(0,n.jsx)(s.p,{children:"The last bit is related to those who want to use vanity addresses. Today it's still quite hard to generate them for 7 or more characters."}),"\n",(0,n.jsx)(s.p,{children:"Therefore I recommend SNS length of hex names to be in the range 3-6 (characters). If you don't plan to use vanity addresses, then up to 10(-ish) may be fine, assuming you don't pick a lame name."}),"\n",(0,n.jsx)(s.h4,{id:"unexpected-behavior-of-supra-cli",children:"Unexpected behavior of Supra CLI"}),"\n",(0,n.jsx)(s.p,{children:"This probably isn't of concern to almost anyone, but some may want to know: when it comes to SNS Supra CLI (maybe Aptos CLI as well) behaves in a way that violates Move's principles (or at least user's expectations)."}),"\n",(0,n.jsxs)(s.p,{children:["Let's say ",(0,n.jsx)(s.code,{children:"0xb00b1ad3c5a95d02f245b938b2f1f325450bf75e4d7714e3b89607be7b6038ab"})," resolves to ",(0,n.jsx)(s.code,{children:"deface.supra"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"In StarKey, you can send Supra to either and it will be well received."}),"\n",(0,n.jsxs)(s.p,{children:["But if you try to automate that from SUPRA CLI and send 1 SUPRA to address",":deface"," using the Supra CLI, this is where it'll go to",(0,n.jsx)(s.code,{children:"0x0000000000000000000000000000000000000000000000000000000000deface"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:['I got a comment saying "but that is expected" as ',(0,n.jsx)(s.code,{children:"address"})," only deals with hex strings and the Supra CLI can't resolve (or even isn't suppose to resolve) SNS."]}),"\n",(0,n.jsx)(s.p,{children:"But why wouldn't the CLI not resolve SNS addresses? They're on chain, after all!"}),"\n",(0,n.jsxs)(s.p,{children:["You may say they shouldn't be resolved because the correct type for address field is, so ",(0,n.jsx)(s.code,{children:"deface"})," is correctly interpreted to mean ",(0,n.jsx)(s.code,{children:"0x0000000000000000000000000000000000000000000000000000000000deface"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["I don't disagree, but my the Move Language is supposed to not do unpredictable stuff and I think interpreting ",(0,n.jsx)(s.code,{children:"address:deface"})," the way it does is unpredictable. Why?"]}),"\n",(0,n.jsxs)(s.p,{children:["Because ",(0,n.jsx)(s.em,{children:"no one can possibly have such an address"}),", sending tokens to ",(0,n.jsx)(s.code,{children:"address:deface"})," is ",(0,n.jsx)(s.strong,{children:"guaranteed to burn them"}),". A person who wants to burn tokens on mainnet is unlikely to use ",(0,n.jsx)(s.code,{children:"address:deface"})," (maybe it'd be OK for ",(0,n.jsx)(s.code,{children:"address:burn"}),' if that was a "well known" burn address for the network).']}),"\n",(0,n.jsx)(s.p,{children:'In my opinion the right way that still sticks to the strict "rules" would be:'}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["For an address provided as STRING, where string length is less than 10 bytes (as is the case with ",(0,n.jsx)(s.code,{children:"deface"}),"), try to resolve it in SNS. If not resolvable or if there's no SNS resolution in the CLI, exit with error."]}),"\n",(0,n.jsxs)(s.li,{children:["For strings longer than 10 bytes, resolve in SNS and refuse to send if it resolvable (because it might be ambiguous). Currently - since the CLI can't query SNS - it'd be right to send these to wallet prefixed with ",(0,n.jsx)(s.code,{children:"0x"}),' and padded with zeros. Maybe unexpected, but still "technically correct".']}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"It's a subtle thing, but if I were a Supra or Aptos developer, I'd do this at the minimum:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:'Introduce "well known" short burn addresses (less than 10 characters)'}),"\n",(0,n.jsxs)(s.li,{children:["For all others, fail (i.e. refuse to pad with 0s and send to a random burn address unless the string (in ",(0,n.jsx)(s.code,{children:"address:string"}),") is longer than 9 characters) unless SNS resolution can be successfully done and the string found"]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"where-to-buy-or-register-hex-names",children:"Where to buy or register hex names"}),"\n",(0,n.jsx)(s.p,{children:"I registered a bunch of hex names according to the above considerations: most are 3-6 characters and therefore suitable for pairing with vanity addresses. Some are longer, but I registered only those long hex names that I really liked."}),"\n",(0,n.jsx)(s.p,{children:"You can find them by sorting the table of available names by Comment and looking for comments that contain hex symbols."}),"\n",(0,n.jsxs)(s.p,{children:["Some good ones (including 3 letter names) are still available through Dexlyn's ",(0,n.jsx)(s.a,{href:"https://suprans.id/names",children:"SupraNS dApp"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"update-march-25-2025",children:"Update (March 25, 2025)"}),"\n",(0,n.jsx)(s.p,{children:"SupraNS names are now transferable directly from Dexlyn's dApp UI."}),"\n",(0,n.jsx)(s.p,{children:"There's no marketplace yet, but we have been gifting and exchanging names in a trusted way."})]})}function l(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},26441:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/hex-names-proper-use-japanese-1824bc9d2474bac843bdb8b87959765b.png"},16329:(e,s,a)=>{a.d(s,{A:()=>n});const n=a.p+"assets/images/hex-names-proper-use-3875fb50fb6681d6c49caa2699f7a4a8.png"},27468:(e,s,a)=>{a.d(s,{R:()=>o,x:()=>d});var n=a(30758);const t={},r=n.createContext(t);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);